- yellow='rgba(252, 243, 174, 0.3)'
- yellow2='rgb(252, 243, 175)'
- orange='rgba(255, 209, 198, 0.3)'
- orange2='rgb(255, 209, 198)'
- blue='rgba(162, 193, 255, 0.5)'
- blue2='rgb(163, 196, 253)'
- teal='rgb(49, 205, 212)'
- pink='rgb(255, 163, 187)'
section(data-background=yellow)
  .columns.is-vcentered
    .column.is-half
      img(src='https://avatars2.githubusercontent.com/u/8436717?s=460&v=4')
    .column.is-half.project
      .is-left.has-text-left(style=`background-color:${yellow2}; padding: 20px;`)
        h3 Pandelis Zembashis
        div.is-size-5
          p 🚩 GitHub Campus Expert
          p 🛩 Birmingham, 🇬🇧
          p 💻 Avid hacker and tinkerer
          p 🔨 FullStack developer
          p 👨‍🎓 Computer Science Student
section(data-background=orange)
  h2 What we're going to talk about
  ul
    li.fragment(data-fragment-index="1") The problem we're trying to solve ✅
    li.fragment(data-fragment-index="2") The theory behind how Git works 🔥
    li.fragment(data-fragment-index="3") A CLI walkthrough 🔥
    li.fragment(data-fragment-index="4") Collaborative website example using GitHub flow ✅
    li.fragment(data-fragment-index="5") *Questions tips and tricks 🔥🔨
section(data-background=blue)
  h1 The problem
  h2.fragment 👉 Sharing
section(data-background=blue)
  h1 Sharing Code 💻
section(data-background=blue)
  h1 Sharing Ideas 💡
section(data-background=blue)
  h1 Collaborating 👩‍💻 👨‍💻
  h3.fragment Rejecting what doesn't work ❌
section(data-background=teal)
  h3 Methods to collaborate
  ul
    li Email
    li Whatsapp
    li Google Docs
    li Google Drive / DropBox
    li USB Drives
    li Paper? 
    li Verbally??
    li Serial brain interface???
section(data-background=teal)
  h2 Not good enough
section(data-background=yellow)
  h2 What is required for effective collaboration
  ul
    li Source of truth
    li History of changes
    li Method to accept or reject changes
    li.fragment *Simple
section(data-background=yellow)
  h1 How does Git help us achieve effective <span class="is-size-3">(and sane)</span> collaboration
section(data-background=orange)
  h2 A Git primer
  .columns.is-vcentered
    .column.is-half
      img(src="public/img/git-icon.png", alt="")
    .column.is-half
      p Git is the 
        u
          strong technology.
        | Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.
section(data-background=orange)
  h2 GitHub !== Git <span class="is-size-3">(But it's quite close)</span>
  .columns.is-vcentered
    .column.is-one-third
      img(src="public/img/octocat.png", alt="")
    .column
      p GitHub is a web-based 
       strong hosting service 
       | for version control using Git.
      p It makes Git as easy to use as any website and has many extra features designed to improve how people collaborate.
section(data-background=orange)
  h2 Git is used a lot
  .columns.is-centered.is-vcentered
    .column
      img(src="public/img/google.png", alt="")
    .column
      img(src="public/img/spotify.png", alt="")
    .column
      img(src="public/img/microsoft.png", alt="")
  .columns.is-centered.is-vcentered
    .column
      img(src="public/img/tux.sh.png", alt="")
    .column
      img(src="public/img/apache.png", alt="")
    .column
      img(src="public/img/netflix.png", alt="")
    .column
      img(src="public/img/twitter.png", alt="")
    .column
      img(src="public/img/apple.png", alt="")
section
  h1 Getting into Git
  img(src="public/img/git-icon.png", alt="")
section
  h4 Distributed Workflows
  img(src="public/img/centralized_workflow.png")
section
  h4 The 3 stages
  img(src="public/img/areas.png", alt="")
section
  h4 The lifecycle
  img(src="public/img/lifecycle.png", alt="")
section
  h4 The basics
  pre
    code(data-trim,data-noescape).
      git init - Initialise new git

      git clone username@host:/path/to/repository - Clone from server

      git add * - add all files that are untracked

      git commit -m "Commit message" - commit a staged file
      
      git push origin master - push committed file to remote server
section(class="fig-container",
        data-fig-id="fig-diagram1",
        data-file="/diagrams/commits.html",
        style="height: 100%;")
  div(style="top:0") 
    h3 How we track history (commits)
    p Each 
      strong commit 
      |  is a marker in time with the exact changes (diff) to each file.
section(data-background-iframe="d3git/#zen")
section
  h1 Let's try it out
  h4 github.com/PandelisZ/uppsala-workshop
section(data-background-iframe="https://pandelisz.github.io/uppsala-guestbook")
section
  img(src="public/img/backpack.png", alt="")
  h4 education.github.com/pack
section(data-background-iframe="https://githubcampus.expert/")
section(data-background=pink)
  h1 Questions
  h3 Requests for tips and tricks!
section(data-background=yellow)
  .columns.is-vcentered
    .column.is-half
      img(src='https://avatars2.githubusercontent.com/u/8436717?s=460&v=4')
    .column.is-half.project
      .is-left.has-text-left(style=`background-color:${yellow2}; padding: 20px;`)
        h3 Thank you ❤️
        div.is-size-5
          p Twitter: @PandelisZ
          p Instagram: @PandelisZ
          p GitHub: @PandelisZ
          p Web: pandelis.me
          p Hang out?
          p <b>Leave feedback please</b>: github.com/PandelisZ/git-intro-slides
